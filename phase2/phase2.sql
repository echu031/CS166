DROP TABLE Users CASCADE;
DROP TABLE Customer CASCADE;
DROP TABLE Manager CASCADE;
DROP TABLE Store CASCADE;
DROP TABLE Product CASCADE;
DROP TABLE Warehouse CASCADE;
DROP TABLE Supplies;
DROP TABLE Orders;
DROP TABLE Requests;
DROP TABLE Updates;

CREATE TABLE Users (
	UserID INTEGER UNIQUE NOT NULL,
	Password CHAR(11) NOT NULL,
	Name CHAR(50) NOT NULL,
	Email CHAR(50),
	PRIMARY KEY(UserID)
);

CREATE TABLE Customer (
	UserID INTEGER UNIQUE NOT NULL,
	CreditScore INTEGER,
	Latitude DECIMAL(8, 6) NOT NULL,
	Longitude DECIMAL(9, 6) NOT NULL,
	PRIMARY KEY(UserID),
	FOREIGN KEY(UserID) REFERENCES Users(UserID)
	ON DELETE CASCADE
);

CREATE TABLE Manager (
	UserID INTEGER UNIQUE NOT NULL,
	Degree CHAR(20),
	Salary INTEGER NOT NULL,
	PRIMARY KEY(UserID),
	FOREIGN KEY(UserID) REFERENCES Users(UserID)
	ON DELETE CASCADE
);

CREATE TABLE Store (
        StoreID INTEGER UNIQUE NOT NULL,
        Name CHAR(30) NOT NULL,
        Latitude DECIMAL(8, 6) NOT NULL,
        Longitude DECIMAL(9, 6) NOT NULL,
        DateEstablished DATE,
	ManagedBy INTEGER UNIQUE NOT NULL DEFAULT 0,
        PRIMARY KEY(StoreID),
	FOREIGN KEY(ManagedBy) REFERENCES Manager(UserID)
	ON DELETE SET DEFAULT
);

CREATE TABLE Product (
	StoreID INTEGER UNIQUE NOT NULL,
        ProductName CHAR(30) UNIQUE NOT NULL,
        NumberOfUnits INTEGER NOT NULL,
        PricePerUnit INTEGER NOT NULL,
        Description CHAR(100),
        ImageURL CHAR(30),
	PRIMARY KEY(StoreID, ProductName),
	FOREIGN KEY(StoreID) REFERENCES Store(StoreID)
	ON DELETE CASCADE
);

CREATE TABLE Warehouse (
	WarehouseID INTEGER UNIQUE NOT NULL,
	Area INTEGER,
	Latitude DECIMAL(8, 6) NOT NULL,
	Longitude DECIMAL(9, 6) NOT NULL,
	PRIMARY KEY(WarehouseID)
);

CREATE TABLE Supplies (
	ProductName CHAR(30) NOT NULL,
	WarehouseID INTEGER UNIQUE NOT NULL,
	PRIMARY KEY(ProductName, WarehouseID),
	FOREIGN KEY(ProductName) REFERENCES Product(ProductName)
	ON DELETE CASCADE,
	FOREIGN KEY(WarehouseID) REFERENCES Warehouse(WarehouseID)
	ON DELETE CASCADE
);

CREATE TABLE Orders (
	UserID INTEGER UNIQUE NOT NULL,
	StoreID INTEGER UNIQUE NOT NULL,
	ProductName CHAR(30) NOT NULL,
	UnitsOrdered INTEGER NOT NULL,
	OrderDate DATE,
	PRIMARY KEY(UserID, StoreID, ProductName),
	FOREIGN KEY(UserID) REFERENCES Customer(UserID)
	ON DELETE CASCADE,
	FOREIGN KEY(StoreID) REFERENCES Product(StoreID)
	ON DELETE CASCADE,
	FOREIGN KEY(ProductName) REFERENCES Product(ProductName)
	ON DELETE CASCADE
);

CREATE TABLE Requests (
	UserID INTEGER UNIQUE NOT NULL,
	StoreID INTEGER UNIQUE NOT NULL,
	ProductName CHAR(30) NOT NULL,
	WarehouseID INTEGER UNIQUE NOT NULL,
	UnitsRequested INTEGER NOT NULL,
	PRIMARY KEY(UserID, StoreID, ProductName, WarehouseID),
	FOREIGN KEY(UserID) REFERENCES Manager(UserID),
	FOREIGN KEY(StoreID) REFERENCES Product(StoreID)
	ON DELETE CASCADE,
	FOREIGN KEY(ProductName) REFERENCES Product(ProductName)
	ON DELETE CASCADE,
	FOREIGN KEY(WarehouseID) REFERENCES Warehouse(WarehouseID)
	ON DELETE CASCADE
);

CREATE TABLE Updates (
	UserID INTEGER UNIQUE NOT NULL,
	StoreID INTEGER UNIQUE NOT NULL,
	ProductName CHAR(30) NOT NULL,
	PRIMARY KEY(UserID, StoreID, ProductName),
	FOREIGN KEY(UserID) REFERENCES Manager(UserID)
	ON DELETE CASCADE,
	FOREIGN KEY(StoreID) REFERENCES Product(StoreID)
	ON DELETE CASCADE,
	FOREIGN KEY(ProductName) REFERENCES Product(ProductName)
	ON DELETE CASCADE
);
